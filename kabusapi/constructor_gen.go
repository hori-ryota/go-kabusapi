// Code generated by go-codegen go_constructor; DO NOT EDIT.

package kabusapi

import (
	fmt "fmt"
	http "net/http"
	url "net/url"
	runtime "runtime"
	time "time"
)

func NewIssuingTokenRequest(
	apiPassword string,
) IssuingTokenRequest {
	return IssuingTokenRequest{
		APIPassword: apiPassword,
	}
}

func NewCancelOrderRequest(
	orderID OrderID,
	password OrderPassword,
) CancelOrderRequest {
	return CancelOrderRequest{
		OrderID:  orderID,
		Password: password,
	}
}

func NewSymbolItem(
	symbol Symbol,
	exchange Exchange,
) SymbolItem {
	return SymbolItem{
		Symbol:   symbol,
		Exchange: exchange,
	}
}

func NewRegisterSymbolsRequest(
	symbols []SymbolItem,
) RegisterSymbolsRequest {
	return RegisterSymbolsRequest{
		Symbols: symbols,
	}
}

func NewUnregisterSymbolsRequest(
	symbols []SymbolItem,
) UnregisterSymbolsRequest {
	return UnregisterSymbolsRequest{
		Symbols: symbols,
	}
}

func NewClient() Client {
	return Client{
		restBaseURL: url.URL{Scheme: "http", Host: "localhost:18081", Path: "kabusapi"},
		pushBaseURL: url.URL{Scheme: "ws", Host: "localhost:18081", Path: "kabusapi/websocket"},
		userAgent:   fmt.Sprintf("KabusAPIGoClient/%s (%s)", version, runtime.Version()),
		httpClient:  http.DefaultClient,
	}
}

func NewDate(
	year int32,
	month time.Month,
	day int32,
) Date {
	return Date{
		Year:  year,
		Month: month,
		Day:   day,
	}
}

func NewDateTime(
	time time.Time,
) DateTime {
	return DateTime{
		Time: time,
	}
}
